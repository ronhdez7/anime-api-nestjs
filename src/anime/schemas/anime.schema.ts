// Generated by ts-to-zod
import { z } from "zod";

export const animeProviderSchema = z.union([
  z.literal("9ANIME"),
  z.literal("GOGOANIME"),
  z.literal("ANICRUSH"),
]);

export const animeFilmTypeSchema = z.union([
  z.literal("MOVIE"),
  z.literal("TV"),
  z.literal("OVA"),
  z.literal("ONA"),
  z.literal("SPECIAL"),
  z.literal("MUSIC"),
]);

export const animeSchema = z.object({
  provider: animeProviderSchema,
  name: z.string().nullable(),
  jname: z.string().nullable(),
  audioType: z.object({
    sub: z.boolean(),
    dub: z.boolean(),
  }),
  filmType: animeFilmTypeSchema.nullable(),
  url: z.string(),
  image: z.string().nullable(),
  quality: z.string().nullable(),
  episodeCount: z.number().nullable(),
});
export const animeResultSchema = z.array(animeSchema);

export const animeFilterOptionsSchema = z.object({
  keyword: z.string().optional(),
  type: z.array(z.string()).optional(),
  status: z.string().optional(),
  season: z.array(z.string()).optional(),
  language: z.array(z.string()).optional(),
  sort: z.string().optional(),
  year: z.array(z.number()).optional(),
  genres: z.array(z.string()).optional(),
  page: z.number().optional(),
});

export const episodeSchema = z.object({
  provider: animeProviderSchema,
  providerId: z.number(),
  name: z.string().nullable(),
  jname: z.string().nullable(),
  number: z.number(),
  url: z.string().nullable(),
});
export const episodeResultSchema = z.array(episodeSchema);

export const serverSchema = z.object({
  provider: animeProviderSchema,
  name: z.string(),
  serverNumber: z.number(),
  url: z.string(),
  audioType: z.string(),
  playerUrl: z.string(),
});
export const serverResultSchema = z.array(serverSchema);

export const sourceTrackSchema = z.object({
  file: z.string(),
  kind: z.string(),
  label: z.string().optional(),
  default: z.literal(true).optional(),
});

export const animeSectionTimestampsSchema = z.object({
  start: z.number(),
  end: z.number(),
});

export const encryptedSourceResultSchema = z.object({
  url: z.string(),
  type: z.string(),
});

export const sourceResultSchema = z.object({
  sources: z.array(encryptedSourceResultSchema),
  tracks: z.array(sourceTrackSchema),
  intro: animeSectionTimestampsSchema,
  outro: animeSectionTimestampsSchema,
  server: z.number(),
  playerUrl: z.string(),
});
